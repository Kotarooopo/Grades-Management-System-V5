# Generated by Django 5.0.4 on 2024-07-26 06:20

import core.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_administrator', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_level', models.CharField(choices=[('Grade 7', 'Grade 7'), ('Grade 8', 'Grade 8'), ('Grade 9', 'Grade 9'), ('Grade 10', 'Grade 10')], max_length=50)),
                ('section', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='GradingCriterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria_type', models.CharField(choices=[('WW', 'Written Works'), ('PT', 'Performance Tasks'), ('QE', 'Quarterly Exam')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='GradingPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('1st', '1st Grading'), ('2nd', '2nd Grading'), ('3rd', '3rd Grading'), ('4th', '4th Grading')], max_length=3)),
                ('is_current', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=9, unique=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('Firstname', models.CharField(max_length=200, null=True)),
                ('Lastname', models.CharField(max_length=200, null=True)),
                ('Middle_Initial', models.CharField(blank=True, max_length=10, null=True)),
                ('Gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('Phone_Number', models.CharField(blank=True, max_length=11, null=True)),
                ('profile_picture', models.ImageField(blank=True, default='core/default_profile.png', upload_to=core.models.user_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('Firstname', models.CharField(max_length=200, null=True)),
                ('Lastname', models.CharField(max_length=200, null=True)),
                ('Middle_Initial', models.CharField(blank=True, max_length=10, null=True)),
                ('Gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('Phone_Number', models.CharField(blank=True, max_length=11, null=True)),
                ('profile_picture', models.ImageField(blank=True, default='core/default.png', upload_to=core.models.user_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('Firstname', models.CharField(max_length=200, null=True)),
                ('Lastname', models.CharField(max_length=200, null=True)),
                ('Middle_Initial', models.CharField(blank=True, max_length=10, null=True)),
                ('Gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('Phone_Number', models.CharField(blank=True, max_length=11, null=True)),
                ('profile_picture', models.ImageField(blank=True, default='core/default_profile.png', upload_to=core.models.user_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='core.class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='core.student')),
            ],
        ),
        migrations.CreateModel(
            name='GradingNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_grade', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('enrollment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.enrollment')),
                ('grading_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gradingperiod')),
            ],
        ),
        migrations.AddField(
            model_name='gradingperiod',
            name='school_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grading_periods', to='core.schoolyear'),
        ),
        migrations.AddField(
            model_name='class',
            name='school_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='core.schoolyear'),
        ),
        migrations.AddField(
            model_name='class',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='core.subject'),
        ),
        migrations.CreateModel(
            name='SubjectCriterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weightage', models.IntegerField()),
                ('grading_criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gradingcriterion')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject')),
            ],
            options={
                'unique_together': {('subject', 'grading_criterion')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.enrollment')),
                ('grading_period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.gradingperiod')),
                ('subject_criterion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.subjectcriterion')),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('max_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.class')),
                ('grading_period', models.ForeignKey(limit_choices_to={'is_current': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.gradingperiod')),
                ('subject_criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subjectcriterion')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='core.teacher'),
        ),
        migrations.AlterUniqueTogether(
            name='gradingperiod',
            unique_together={('school_year', 'period')},
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('initial_grade', models.DecimalField(decimal_places=2, editable=False, max_digits=5, null=True)),
                ('activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.activity')),
                ('enrollment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.enrollment')),
            ],
            options={
                'unique_together': {('enrollment', 'activity')},
            },
        ),
        migrations.CreateModel(
            name='TotalInitialGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_grade', models.DecimalField(decimal_places=2, max_digits=5)),
                ('enrollment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.enrollment')),
                ('grading_period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.gradingperiod')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject')),
            ],
            options={
                'unique_together': {('enrollment', 'subject', 'grading_period')},
            },
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['student', 'class_obj'], name='core_enroll_student_4030c3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='class',
            unique_together={('school_year', 'grade_level', 'section', 'subject')},
        ),
    ]
